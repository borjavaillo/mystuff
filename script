#!/usr/bin/env ruby

# The script requires a security group as first positional parameter and a port as second ( TCP is assumed, by now )
# We don't doublecheck validity of either SG or port so use at your own peril!!!
# This script will make sure that the specified SG and TCP port accept incoming traffic from CLOUDFRONT ( can be changed onto a variable if needed in the future ). The ipranges used are those announced by AWS themseleves. 

# Stuff we need
require 'aws-sdk'
require 'json'
require 'open-uri'

# Setting the positional parameters
security_group = ARGV[0]
security_group_port = ARGV[1]
# Raise exception if any positional parameter is not set
raise 'pass positional parameters: sg sg_port' unless security_group and security_group_port

# cfn_endpoint_ranges is a unidimensional array whose components are ipadresses with netmask ( x.x.x.x/y ) retrieved from AWS, those are the ranges that provide the CLOUDFRONT service
cfn_endpoint_ranges = JSON.parse(open("https://ip-ranges.amazonaws.com/ip-ranges.json") { |io| io.read })["prefixes"].select {|p| p["service"]=="CLOUDFRONT"}.map{|component| component['ip_prefix']};

# Now let's find out the rules matching our SG and port on our infrastructure
ec2 = Aws::EC2::Client.new
#puts resp = ec2.describe_security_groups({group_names: ["#{security_group}"]})
resp = ec2.describe_security_groups(:filters => [ { :name => "#{security_group}", :values => [id] } ]).security_group_index.key?(id)



# ==========ENDBEGIN===================
# Ex: Print each element of the array
#cfn_endpoint_ranges.each do |component|
#  puts "#{component}"
#end

#puts security_group
#puts security_group_port
# =========ENDEND=====================