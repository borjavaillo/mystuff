- migration FTP host to Ec2 ( Internet, not VPC )
- migration of maven repos from hosted in Pau Claris to AWS S3
- securing AWS: cuando llegue había muchas vulnerabilidades, por ejemplo, puertos ssh abiertos a internet tanto en el servidor
de VPN como en hosts de AWS. También nestaba habilitado el acceso por VPN a ex empleados, se cerraron. Se auditió y corrigió todo esto. Respecto Ec2 ( VPC e internet ) y RDS PENDIENTE: setear scaneo automatizado en AWS para Ec2, RDS y otros recursos ( muy costoso en términos de tiempo ). No estamos a salvo de humano introduciendo
errores ( en forma de security groups demasiado abiertos ).
- Habilitar Glacier para buckets ( y paths ) aptos y acordados con SW para reducir costes ( se podría profundizar más en este sentido pero la falta de documentación lo dificulta mucho ( recordar, por ejemplo el incidente con queries que dejaron de funcionar
el 2 de enero de este año porque unos ficheros binarios habian transicionado a Glacier. Obviamente estos ficheros no debían
estar ahí )
- Deprecación del resto de servidores físicos de Pau Claris y/o migración de sus servicios a AWS
- redmine: upgrade de versión cuando estábamos en Pau clarís, posterior migración a AWS, migración de TODOS los contenidos relevantes a Confluence ( se aprovechó para descartar material obsoleto aunque se fue conservador, conservamos un directorio de 
historical legacy con lo que pueda ser aprovechable ). Dockerización ensayada y documentada de REdmine para cuando pueda deshabilitarse.
- Cooperación en el setup de EMR en AWS
- Mapa de Redes de brandcrumb y documentación asociada: no existía nada al respecto traceando conseguí documentarlo todo
- Cooperación en el setup de API GW service: temas relacionados con R53, certificados ssl...
- Introducción de ACM ( servicio centralizaddo de AWS de gestión de certificados SSL ) permite almacenar el certificado en un único punto y presentarlo des de endpoints de distintos servicios de AWS sin necesidad de subir el certificado manualmente a cada endpoint
- Migración del correo corporativo de OVH a GSuite
- Elaboración y documentación de una policy clara de uso de IAM: introducción de roles para evitar usar credenciales de usuarios no humanos en aplicativos, emulación de un sistema linux ( basado en user/group ) para la gestión de usuarios humanos para simplificar y homogenizar el trabajo
- Desde que se requirió: procedimiento para guardar el correo de ex-empleados en un formato ( mbox ) fácilmente recuperable des de distintos softwares de correo electrónico ( documentado )
- Instancia de Runscope: Como runscope no ofrece un rango de IPs estáticas a whitelistear prototipado y lanzamiento de una instancia para lanzar requests a endpoints de paguro ( públicos y privados ). Para aquellos endpoints que sean o bien privados o bien requieran whitelisting por nuestra parte.
- Introducción de docker y documentación: esto es el paso previo para poder utilizar servicios basados en docker como ECR, ECS i k8s.
- DNS: Incorporación de zona privada para disponer de pool de nombres, reservar recursos, etc, que no queremos mostrar al mundo exterior pero nos facilita el trabajo ( por ejemplo, con el uso de Elastic IPs tenemos varias que se usan de forma dinámica pero no
están siendo utilizadas todo el rato ). Via DNS interno tenemos un mecanismo que nos facilita saber si podemos, o no, coger una
determinada elastic IP.
- SSL certs: gestión y deployment de nuevos certificados cada año, introducción de las matrices ( documentadas ) de endpoints SSL de la empresa que facilitan la identificación de aquellos endpoints que hay que modificar cada año ( dos veces al año ahora que tenemos dos certificados *.brandcrumb.com y *.paguro.io ) 
- Setup de ops-instance-console para que operations pudiera pararla y arrancarla en función del Ec2 tag operations seteado a "yes"
- Deprecación de Chef: Todos lso aplicativos in-house se deployaban con Chef, a nadie le gustaba ( a mí, tampoco ) después de votación unánime, se deprecó sustituyéndolo por ansible ( citado más adelante ).
- RDS: migración de tablas MyIsam a InnoDB en todas las bases de datos afectadas
-  define an alarm framework: 1. API endpoint monitoring ( covered by runscope ) 2. Instance: system ( CPU, RAM... ) and services ( apache, unicorn... ) health ( cubierto por consul que se introdujo a tal efecto )3. service ( application stack level )  
- Intento de deprecación de certificado con SANS para pasar a plain wildcard ( más barato ) algo que se ha conseguido con paguro.io pero no con brandcrumb.com
- migración de chef10 a chef12
- Deprecación de LDAP y servicio samba
- Definición de rutina de llegada y salida de empleado ( tareas a realizar )
- Cooperación en el montaje del cluster de haddoop
- CORS proxy en nginx en Pau Claris
- new AMI based on latest Ubuntu LTS
- user-mon scripts running on Ec2
- Introducción de packer para hacer builds de AMIs de forma reproducible y controlada ( incluyendo control de versiones )
- Host nuevo ( en internet ) de SFTP más scripts para creación de usuarios
- sistema de prototipado repetible de instancias ( lo mismo que packer hace a nivel de AMIs pero de instancias: de tal forma que una instancia debería ser siempre reproducible si se se utiliza este sistema ( in-house, lo llamo user-data tomando prestado
el término de Amazon ). Con esto y packer conseguimos la total reproducibilidad de instancias ( si se utliiza correctamente ). Desgraciadamente muchas versiones no se han mantenido con el tiempo :-(.
- migración archivos a GSuite ( lo que estaba en cellar )
- Upgrades de Engine de RDS y elaboración de un protocolo para hacerlo de forma segura ( tiene prerequisitos para SW para que sea viable ) para nuevos desarrollos es obligatorio y debería estar en checklist pero habrá legacy corriendo que no lo respeta ( estos casos serían resolubles por los compañeros de SW sin demasiados problemas )
- Introduction of Network Acls 
- jenkins: creation in AWS ( was deprecated later )
- Dockerizatioin of knife10 and knife12 ( chef10 and chef12 tools )
- migration of git repos to github
- AWS Budget reducción: Muchísimas veces en varios servicios, Ec2, RDS, ES... tenemos más margen pero no mucho más ( pagamos la mitad que en los primeros meses que estuve aquí...)
